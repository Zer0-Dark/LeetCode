/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
let threeSumClosest = function (nums, target) {
    // first we get all results
    //! Not getting all the results //* solved
    let results = new Set();
    for (let i = 0; i < nums.length - 2; i++) {
        for (let j = i + 1; j < nums.length - 1; j++) {
            for (let k = j + 1; k < nums.length; k++)
                results.add(nums[i] + nums[j] + nums[k])
        }
    }
    results = Array.from(results);
    // * get the closest result
    //! uses alot of memory - alot of time 
    // let closest = results.reduce((prev, curr) => (Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev));
    // return closest
    
};


console.log(threeSumClosest([-827, 39, 955, 593, 507, 452, 148, 761, 155, -479, 923, -353, 901, -242, 941, 833, 851, -839, -647, 779, -961, -508, -306, 91, -762, -807, 569, 383, -743, 257, -866, 907, 418, 268, -93, -530, 215, -152, -118, 222, 604, -746, 467, -521, -39, -553, -197, 760, 491, -380, -185, -814, 680, -768, -417, -383, 848, 634, 488, 228, -338, -5, 508, 811, 204, -456, 682, 503, -735, 772, -122, 43, -867, 667, -235, -491, -292, 278, 502, 95, -2, 878, 203, 29, -970, -906, -277, -954, 373, -161, 272, -458, -607, -190, -295, 575, -23, 922, -339, 86, 469, 190, 885, 440, 882, -83, 758, -978, 925, -621, -98, -672, -952, -639, -129, -344, -622, -841, -395, -117, -573, 866, 18, -367, -69, -359, 815, 101, 5, 956, 59, -100, -513, -836, 642, -547, 133, 501, 194, -676, -581, -482, 156, -461, 166, -770, 349, -664, 551, 781, 764, -160, -203, 497, -864, -677, 556, -833, -124, -896, 550, -257, -703, -139, 356, 767, 94, 612, -28, 368, 168, -75, 471, 245, 142, -330, 477, -454, -365, 227, 583, 787, -963, -974, 213, 55, -131, -515, -777, -613, 754, 252, -237, 589, -213, -993, -905, -214, 26, -887, -821, -17, -374, -3, -22, 674, -714, 875, 730, 250, 456, -562, -196, 838, -806, -761, 909, -194, 71, -26, 765, 727, 458, 515, -684, 946, 798, 598, -966, -514, 707, -422, -697, 688, -908, -501, -804, -885, 236, -860, 341, 254, 474, -891, -378, -244, -143, 582, -497, 36, 323, 249, 797, 957, -705, 237, -54, 303, -373, -862, -630, 138, 740, 967, 823, 343, 826, 940, 63, -941, 462, -816, -605, -838, -281, -585, -832, -992, 633, -159, 924, -976, -637, -576, -355, 931, -413, -813, -520, 198, 917, 829, -850, -913, -522, -265, -169, 759, -21, 202, 226, -219, -915, -794, 595, 415, -318, -443, -55, -166, 419, 889, 154, 935, 662, 485, 920, -218, 793, 355, -929, 126, 444, -985, 893, 293, -690, 19, 975, 770, -793, 67, -49, 524, -436, 879, 487, -332, -452, -708, 41, 564, -962, 806, 177, -620, -297, -228, 812, 410, -366, 83, 211, 7, -568, -424, 574, 165, 903, 161, -689, 34, -499, 2, 117, -612, 543, 913, -717, -542, 463, 728, -749, -254, 455, 239, 807, 300, -7, -71, 763, -883, -351, 382, 915, -973, 790, 978, -177, 992, 800, -853, -145], -8120));
// console.log(threeSumClosest([0, 0, 0], 1))